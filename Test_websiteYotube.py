import unittest
import time
from appium import webdriver
from appium.webdriver.common.appiumby import AppiumBy
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


class YouTubeSearchScrollVideo(unittest.TestCase):
    def setUp(self):
        desired_caps = {
            "platformName": "Android",
            "deviceName": "emulator-5554",
            "browserName": "Chrome",
            "automationName": "UiAutomator2",
            "chromedriverExecutableDir": "/path/to/chromedriver"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ chromedriver, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        }
        self.driver = webdriver.Remote("http://localhost:4723", desired_caps)
        self.wait = WebDriverWait(self.driver, 20)

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é YouTube
        self.driver.get("https://m.youtube.com")
        time.sleep(3)  # –î–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è

        self.search_query = "music 2024"
        self.base_url = "https://m.youtube.com"

    def tearDown(self):
        if hasattr(self, 'driver') and self.driver:
            self.driver.quit()

    def test_scroll_past_reels_to_video(self):
        try:
            print("üîç –ü–æ–∏—Å–∫ 'music 2024'")
            # –ù–∞—Ö–æ–¥–∏–º –∏ –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∏–∫–æ–Ω–∫—É –ø–æ–∏—Å–∫–∞ (–ª—É–ø–∞)
            search_btn = self.wait.until(
                EC.element_to_be_clickable((AppiumBy.XPATH, '//button[@aria-label="Search YouTube"]'))
            )
            search_btn.click()

            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –∏ –≤–≤–æ–¥–∏–º –∑–∞–ø—Ä–æ—Å
            search_field = self.wait.until(
                EC.visibility_of_element_located((AppiumBy.XPATH, '//input[@id="search"]'))
            )
            search_field.clear()
            search_field.send_keys("music 2024")
            search_field.submit()
            time.sleep(3)

            print("üîΩ –ò—â–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º Shorts)")
            found_video = False
            attempts = 0
            max_attempts = 15

            while not found_video and attempts < max_attempts:
                # –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–∏–¥–µ–æ (–∏—Å–∫–ª—é—á–∞—è Shorts)
                video_elements = self.driver.find_elements(
                    AppiumBy.XPATH, '//a[contains(@href, "/watch")]'
                )
                for video in video_elements:
                    try:
                        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ Shorts
                        if "/shorts/" not in video.get_attribute("href"):
                            video.click()
                            print("‚ñ∂ –ù–∞–π–¥–µ–Ω–æ –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ - –Ω–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
                            self.wait.until(
                                EC.presence_of_element_located((AppiumBy.XPATH, '//video'))
                            )
                            found_video = True
                            time.sleep(10)
                            self.driver.back()
                            break
                    except Exception:
                        continue
            self.test_3_play_video()
            
            # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –±–ª–æ–∫—É —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
            self.driver.execute_script("window.scrollTo(0, document.body.scrollHeight/2)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
            related_videos = self.wait.until(
                EC.presence_of_all_elements_located((By.XPATH, '//div[contains(@class, "related-item")]'))
            )
            
            self.assertGreater(len(related_videos), 0, "–°–≤—è–∑–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(related_videos)} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ")
        except Exception as e:
            self.driver.save_screenshot("related_error.png")
            self.fail(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ: {str(e)}")

    def test_5_navigate_to_home(self):
        """5. –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        print("\n=== 5. –¢–µ—Å—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é ===")
        try:
            # –ù–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–∏–¥–µ–æ (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ—Å—Ç–∞)
            self.test_4_check_related_videos()
            
            # –ù–∞–∂–∏–º–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø YouTube –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            home_btn = self.wait.until(
                EC.element_to_be_clickable((By.XPATH, '//a[@aria-label="YouTube"]'))
            )
            home_btn.click()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é
            self.wait.until(
                EC.presence_of_element_located((By.XPATH, '//div[contains(@class, "shelf")]'))
            )
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
        except Exception as e:
            self.driver.save_screenshot("home_error.png")
            self.fail(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é: {str(e)}")


if __name__ == "__main__":
    unittest.main()